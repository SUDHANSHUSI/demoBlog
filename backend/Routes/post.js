const express = require("express");
const multer = require("multer");
const checkAuth = require("../middlewares/check-auth");
const postController = require("../controllers/postController");
const router = express.Router();

const MIME_TYPE_MAP = {
  "image/png": "png",
  "image/jpeg": "jpg",
  "image/jpg": "jpg",
  "image/gif": "gif",
};

//////////////////////////////////////////////////// MULTER ///////////////////////////////////////////////////////////////

const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    const isValid = MIME_TYPE_MAP[file.mimetype];

    let error = new Error("Invalid mime type");
    if (isValid) {
      error = null;
    }
    cb(error, "images");
  },
  filename: (req, file, cb) => {
    const name = file.originalname.toLowerCase().split(" ").join("-");
    const ext = MIME_TYPE_MAP[file.mimetype];
    cb(null, name + "-" + Date.now() + "." + ext);
  },
});

//////////////////////////////////////////////// CREATE POST ////////////////////////////////////////////////////////////////

router.post(
  "",
  checkAuth,
  multer({ storage: storage }).single("image"),
  postController.createPost
);

/////////////////////////////////////////////////// GET MY POST ////////////////////////////////////////////////////////////

router.get("/mypost", checkAuth, postController.getMyPost);

////////////////////////////////////////////////// GET ALL POSTS ///////////////////////////////////////////////////////////

router.get("", postController.getAllPosts);

////////////////////////////////////////////////// GET POST BY ID //////////////////////////////////////////////////////////

router.get("/:id", postController.getPostById);

///////////////////////////////////////////////////// UPDATE POST BY ID//////////////////////////////////////////////////////

router.put(
  "/:id",
  checkAuth,
  multer({ storage: storage }).single("image"),
  postController.updatePostById
);

///////////////////////////////////////////////////// DELETE POST BY ID ////////////////////////////////////////////////

router.delete("/:id", checkAuth, postController.deletePost);

//////////////////////////////////// LIKE POSTS/////////////////////////////////////////////////
router.post("/:id/like", checkAuth, postController.likePost);

////////////////////////////////////////////////UNLIKE POSTS /////////////////////////////////////////////////////

router.post("/:id/unlike", checkAuth, postController.unlikePost);

/////////////////////////////////////////// ADD COMMENT ///////////////////////////////////////////////////////

router.post("/:postId/comment", checkAuth, postController.addComment);

///////////////////////////////////////////////// GET POSTS BY CATEGORY ///////////////////////////////////////////////////

router.get("/category/:category", postController.getPostByCategory);

////////////////////////////////////////////////// GET ALL CATEGORIES //////////////////////////////////////////////////////

router.get("/All/categories", postController.getAllCategories);

///////////////////////////////////////////////////// SEARCH POSTS /////////////////////////////////////////////////////////

router.get("/search/post", postController.searchPost);

////////////////////////////////////////// LIKE LIST ///////////////////////////////////////////////////

router.get("/likeList/:postId", postController.likeList);

module.exports = router;
